{"version":3,"sources":["pages/shop/ShopPage.tsx"],"names":["CollectionsOverviewContainer","lazy","CollectionPageContainer","connect","dispatch","fetchCollections","match","useEffect","className","fallback","exact","path","component"],"mappings":"0HAAA,kEAUMA,EAA+BC,gBAAK,kBAAM,iCAC1CC,EAA0BD,gBAAK,kBAAM,iCA4B5BE,sBAAQ,MAJI,SAACC,GAAD,MAAwB,CAClDC,iBAAkB,kBAAMD,EAASC,mBAGnBF,EArBE,SAAC,GAA+C,IAA7CE,EAA4C,EAA5CA,iBAAkBC,EAA0B,EAA1BA,MAKrC,OAJAC,qBAAU,WACTF,MACE,CAACA,IAGH,yBAAKG,UAAU,aACd,kBAAC,IAAD,KACC,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OACnB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKL,EAAMK,MAAQC,UAAWZ,IAC/C,kBAAC,IAAD,CAAOW,KAAI,UAAKL,EAAMK,KAAX,kBAAiCC,UAAWV","file":"static/js/7.90f962d8.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\r\nimport ErrorBoundary from '../../components/errorBoundary/ErrorBoundary';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\n// import CollectionsOverviewContainer from '../../components/collectionsOverview/CollectionsOverviewContainer';\r\n// import CollectionPageContainer from '../collection/CollectionPageContainer';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport { fetchCollections } from '../../redux/shop/shopActions';\r\n\r\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collectionsOverview/CollectionsOverviewContainer'));\r\nconst CollectionPageContainer = lazy(() => import('../collection/CollectionPageContainer'));\r\n\r\ntype ShopPageProps = {\r\n\tfetchCollections:() => any,\r\n\tmatch:RouteProps\r\n};\r\n\r\nconst ShopPage = ({ fetchCollections, match }:ShopPageProps) => {\r\n\tuseEffect(() => {\r\n\t\tfetchCollections();\r\n\t}, [fetchCollections]);\r\n\r\n\treturn (\r\n\t\t<div className='shop-page'>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<Suspense fallback={<Spinner />}>\r\n\t\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\r\n\t\t\t\t\t<Route path={`${match.path}/:collectionID`} component={CollectionPageContainer} />\r\n\t\t\t\t</Suspense>\r\n\t\t\t</ErrorBoundary>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => ({\r\n\tfetchCollections: () => dispatch(fetchCollections())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"],"sourceRoot":""}