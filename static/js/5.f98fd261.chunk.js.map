{"version":3,"sources":["components/formInPut/FormInPut.tsx","components/logIn/LogIn.tsx","components/register/Register.tsx","pages/authentication/AuthenticationPage.tsx"],"names":["FormInPut","handleChange","label","otherProps","className","onChange","required","value","length","connect","disPatch","eMailLogIn","eMail","passWord","GoogleLogIn","useState","logInDetails","setLogInDetails","event","target","name","handleSubmit","a","preventDefault","onSubmit","type","CustomButton","onClick","isGoogleLogIn","register","registrationDetails","displayName","confirmPassWord","setRegistrationDetails","alert","AuthenticationPage"],"mappings":"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","file":"static/js/5.f98fd261.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\r\nimport './FormInPut.scss';\r\n\r\ntype TFormInPut = {\r\n\thandleChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n\tlabel: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tvalue: string;\r\n\trequired: boolean;\r\n};\r\n\r\nconst FormInPut = ({ handleChange, label, ...otherProps }: TFormInPut) => {\r\n\treturn (\r\n\t\t<div className='group'>\r\n\t\t\t<input className='form-input' onChange={handleChange} {...otherProps} required />\r\n\t\t\t{\r\n\t\t\t\tlabel\r\n\t\t\t\t\t? <label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>{label}</label>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FormInPut;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport FormInPut from '../formInPut/FormInPut';\r\nimport CustomButton from '../../components/customButton/CustomButton';\r\nimport { eMailLogIn, GoogleLogIn } from '../../redux/user/userActions';\r\nimport './LogIn.scss';\r\n\r\ntype LogIns = {\r\n\teMailLogIn: (eMail: string, passWord: string) => any,\r\n\tGoogleLogIn: () => any\r\n};\r\n\r\nconst LogIn = ({ eMailLogIn, GoogleLogIn }: LogIns) => {\r\n\tconst [ logInDetails, setLogInDetails ] = useState({eMail: '', passWord: ''});\r\n\r\n\tconst { eMail, passWord } = logInDetails;\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tsetLogInDetails({...logInDetails, [name]: value});\r\n\t};\r\n\r\n\tconst handleSubmit = async (event: React.FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\teMailLogIn(eMail, passWord);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='log-in'>\r\n\t\t\t<h2>Log-In</h2>\r\n\t\t\t<span>...with Google / EMail/PassWord</span>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInPut\r\n\t\t\t\t\tname='eMail'\r\n\t\t\t\t\tlabel='eMail'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tvalue={eMail}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInPut\r\n\t\t\t\t\tname='passWord'\r\n\t\t\t\t\tlabel='passWord'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={passWord}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t<CustomButton type='submit'>Log-In</CustomButton>\r\n\t\t\t\t\t<CustomButton type='button' onClick={GoogleLogIn} isGoogleLogIn>Log-In with Google</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDisPatchToProps = (disPatch: Dispatch) => ({\r\n\teMailLogIn: (eMail: string, passWord: string) => disPatch(eMailLogIn({ eMail, passWord })),\r\n\tGoogleLogIn: () => disPatch(GoogleLogIn())\r\n});\r\n\r\nexport default connect(null, mapDisPatchToProps)(LogIn);","import React, { useState } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport FormInPut from '../formInPut/FormInPut';\r\nimport CustomButton from '../customButton/CustomButton';\r\nimport { register } from '../../redux/user/userActions';\r\nimport './Register.scss';\r\n\r\ntype Registrations = {\r\n\tregister: (registrationDetails: object) => any;\r\n};\r\n\r\nconst Register = ({ register }: Registrations) => {\r\n\tconst [ registrationDetails, setRegistrationDetails ] = useState({\r\n\t\tdisplayName: '',\r\n\t\teMail: '',\r\n\t\tpassWord: '',\r\n\t\tconfirmPassWord: ''\r\n\t});\r\n\r\n\tconst { displayName, eMail, passWord, confirmPassWord } = registrationDetails;\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tsetRegistrationDetails({...registrationDetails, [name]: value});\r\n\t};\r\n\r\n\tconst handleSubmit = async (event: React.FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (passWord !== confirmPassWord) {\r\n\t\t\talert('PassWords Don\\'t Match');\r\n\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\tregister({ displayName, eMail, passWord });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='register'>\r\n\t\t\t<h2 className='title'>Register</h2>\r\n\t\t\t<span>...with EMail and PassWord</span>\r\n\t\t\t<form className='registration-form' onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInPut\r\n\t\t\t\t\tname='displayName'\r\n\t\t\t\t\tlabel='displayName'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInPut\r\n\t\t\t\t\tname='eMail'\r\n\t\t\t\t\tlabel='eMail'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tvalue={eMail}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInPut\r\n\t\t\t\t\tname='passWord'\r\n\t\t\t\t\tlabel='passWord'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={passWord}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInPut\r\n\t\t\t\t\tname='confirmPassWord'\r\n\t\t\t\t\tlabel='confirmPassWord'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={confirmPassWord}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t<CustomButton type='submit'>REGISTER</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDisPatchToProps = (disPatch: Dispatch) => ({\r\n\tregister: (registrationDetails: any) => disPatch(register(registrationDetails))\r\n});\r\n\r\nexport default connect(null, mapDisPatchToProps)(Register);","import React from 'react';\r\nimport LogIn from '../../components/logIn/LogIn';\r\nimport Register from '../../components/register/Register';\r\nimport './AuthenticationPage.scss';\r\n\r\nconst AuthenticationPage = () => {\r\n\treturn (\r\n\t\t<div className='authentication-page'>\r\n\t\t\t<LogIn />\r\n\t\t\t<Register />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AuthenticationPage;"],"sourceRoot":""}