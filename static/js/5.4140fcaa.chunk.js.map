{"version":3,"sources":["components/formInput/FormInput.tsx","components/logIn/LogIn.tsx","components/register/Register.tsx","pages/auth/AuthPage.tsx"],"names":["FormInput","handleChange","label","otherProps","className","onChange","required","value","length","connect","dispatch","emailLogIn","email","password","googleLogIn","useState","logInDetails","setLogInDetails","event","target","name","handleSubmit","a","preventDefault","onSubmit","type","CustomButton","onClick","isGoogleLogIn","register","userCredentials","displayName","confirmPassword","registrationDetails","setRegistrationDetails","alert","AuthPage"],"mappings":"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","file":"static/js/5.4140fcaa.chunk.js","sourcesContent":["import React, { ChangeEvent } from 'react';\r\nimport './FormInput.scss';\r\n\r\ntype FormInput = {\r\n\thandleChange:((event: ChangeEvent<HTMLInputElement>) => void);\r\n\tlabel:string;\r\n\tname:string;\r\n\ttype:string;\r\n\tvalue:string;\r\n\trequired:boolean;\r\n};\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }:FormInput) => {\r\n\treturn (\r\n\t\t<div className='group'>\r\n\t\t\t<input className='form-input' onChange={handleChange} {...otherProps} required />\r\n\t\t\t{\r\n\t\t\t\tlabel\r\n\t\t\t\t\t? <label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>{label}</label>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FormInput;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport FormInput from '../../components/formInput/FormInput';\r\nimport CustomButton from '../../components/customButton/CustomButton';\r\nimport { emailLogIn, googleLogIn } from '../../redux/user/userActions';\r\nimport './LogIn.scss';\r\n\r\ntype LogIns = {\r\n\temailLogIn:(email:string, password:string) => any,\r\n\tgoogleLogIn:() => any\r\n};\r\n\r\nconst LogIn = ({ emailLogIn, googleLogIn }:LogIns) => {\r\n\tconst [logInDetails, setLogInDetails] = useState({\r\n\t\temail: '', password: ''\r\n\t});\r\n\tconst { email, password } = logInDetails;\r\n\r\n\tconst handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\t\r\n\t\tsetLogInDetails({...logInDetails, [name]: value});\r\n\t};\r\n\r\n\tconst handleSubmit = async (event:React.FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\temailLogIn(email, password);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='log-in'>\r\n\t\t\t<h2>Log In</h2>\r\n\t\t\t<span>...with Google/Email and Password</span>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tlabel='email'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tlabel='password'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='buttons'>\r\n\t\t\t\t\t<CustomButton type='submit'>Log In</CustomButton>\r\n\t\t\t\t\t<CustomButton type='button' onClick={googleLogIn} isGoogleLogIn>Log In with Google</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => ({\r\n\temailLogIn: (email:string, password:string) => dispatch(emailLogIn({email, password})),\r\n\tgoogleLogIn: () => dispatch(googleLogIn())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(LogIn);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport FormInput from '../formInput/FormInput';\r\nimport CustomButton from '../customButton/CustomButton';\r\nimport { register } from '../../redux/user/userActions';\r\nimport './Register.scss';\r\n\r\ntype Registrations = {\r\n\tregister:(registrationDetails:object) => any\r\n};\r\n\r\nconst Register = ({ register }:Registrations) => {\r\n\tconst [registrationDetails, setRegistrationDetails] = useState({\r\n\t\tdisplayName: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tconfirmPassword: ''\r\n\t});\r\n\tconst { displayName, email, password, confirmPassword } = registrationDetails;\r\n\r\n\tconst handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\t\r\n\t\tsetRegistrationDetails({...registrationDetails, [name]: value});\r\n\t};\r\n\r\n\tconst handleSubmit = async (event:React.FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\r\n\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\talert('Passwords Don\\'t Match!');\r\n\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\tregister({ displayName, email, password });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='register'>\r\n\t\t\t<h2 className='title'>Register</h2>\r\n\t\t\t<span>...with Email and Password</span>\r\n\t\t\t<form className='registration-form' onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='displayName'\r\n\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='confirmPassword'\r\n\t\t\t\t\tlabel='Confirm Password'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='buttons'>\r\n\t\t\t\t<CustomButton type='submit'>REGISTER</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => ({\r\n\tregister: (userCredentials:any) => dispatch(register(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Register);","import React from 'react';\r\nimport LogIn from '../../components/logIn/LogIn';\r\nimport Register from '../../components/register/Register';\r\nimport './AuthPage.scss';\r\n\r\nconst AuthPage = () => {\r\n\treturn (\r\n\t\t<div className='auth-page'>\r\n\t\t\t<LogIn />\r\n\t\t\t<Register />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AuthPage;"],"sourceRoot":""}